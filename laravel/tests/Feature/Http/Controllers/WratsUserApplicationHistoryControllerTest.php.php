<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\WratsUserApplicationHistoryController
 */
class WratsUserApplicationHistoryControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function create_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('wrats-user-application-histories.create'));

        $response->assertOk();
        $response->assertViewIs('wratsUserApplicationHistory.create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wratsUserApplicationHistory = \App\Models\WratsUserApplicationHistory::factory()->create();

        $response = $this->delete(route('wrats-user-application-histories.destroy', [$wrats_user_application_history]));

        $response->assertRedirect(route('wratsUserApplicationHistories.index'));
        $this->assertModelMissing($wratsUserApplicationHistory);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wratsUserApplicationHistory = \App\Models\WratsUserApplicationHistory::factory()->create();

        $response = $this->get(route('wrats-user-application-histories.edit', [$wrats_user_application_history]));

        $response->assertOk();
        $response->assertViewIs('wratsUserApplicationHistory.edit');
        $response->assertViewHas('wratsUserApplicationHistory', $wratsUserApplicationHistory);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wratsUserApplicationHistories = \App\Models\WratsUserApplicationHistory::factory()->times(3)->create();

        $response = $this->get(route('wrats-user-application-histories.index'));

        $response->assertOk();
        $response->assertViewIs('wratsUserApplicationHistory.index');
        $response->assertViewHas('wratsUserApplicationHistories', $wratsUserApplicationHistories);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wratsUserApplicationHistory = \App\Models\WratsUserApplicationHistory::factory()->create();
        $wratsUserApplicationHistories = \App\Models\WratsUserApplicationHistory::factory()->times(3)->create();

        $response = $this->get(route('wrats-user-application-histories.show', [$wrats_user_application_history]));

        $response->assertOk();
        $response->assertViewIs('wratsUserApplicationHistory.show');
        $response->assertViewHas('groupedItems');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request(): void
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\WratsUserApplicationHistoryController::class,
            'store',
            \App\Http\Requests\WratsUserApplicationHistoryStoreRequest::class
        );
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('wrats-user-application-histories.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('wratsUserApplicationHistories.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request(): void
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\WratsUserApplicationHistoryController::class,
            'update',
            \App\Http\Requests\WratsUserApplicationHistoryUpdateRequest::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wratsUserApplicationHistory = \App\Models\WratsUserApplicationHistory::factory()->create();

        $response = $this->put(route('wrats-user-application-histories.update', [$wrats_user_application_history]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('wratsUserApplicationHistories.index'));

        // TODO: perform additional assertions
    }

    // test cases...
}
